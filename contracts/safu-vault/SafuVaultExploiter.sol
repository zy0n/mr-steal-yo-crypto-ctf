// SPDX-License-Identifier: SEE LICENSE IN LICENSE
pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC20/IERC20.sol";
// pull interface from contract
interface IStrategy {
    function withdraw(uint256) external;
    function balanceOf() external view returns (uint256);
}

// simply get the qty, and withdraw it directly from the strategy

contract SafuVaultExploiter {

  IStrategy dumbVault;
  uint256 bounty;
  IERC20 token;
  uint256 balance;

  constructor(address _victim, address _pwner, address _token){

    dumbVault = IStrategy(_victim);
    bounty = dumbVault.balanceOf();
    // dumbVault.withdraw(bounty);
    token = IERC20(_token);

    balance = token.balanceOf(address(this));

    


  }

  functon pwn(address victim, address pwner) internal {
    
  }

}